<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo+七牛云命令工具存储图片.md]]></title>
    <url>%2Fhexo-%E4%B8%83%E7%89%9B%E4%BA%91%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87-md20180428%2F</url>
    <content type="text"><![CDATA[##加入图片的几种方式 Hexo文章中的图片，可以放在本地，然后和静态文件一起发布（部署）到你的空间。将图片放在source/images目录下，然后直接引入比较麻烦，也占用资源，想到后期图片增多的加载速度问题，果断放弃 使用各种图床，如：贴图库,注册个用户,直接上传图片不是很稳定,而且每次都要打开web，然后上传，我是个懒人~~~~ 使用七牛云的命令行工具 首先下载工具：点击这里该工具由于是命令行工具，所以只需要从上面的下载链接下载后即可执行使用（建议重命名为qshell）。但每次都要找到目录打开这个命令行工具有木有很麻烦!~那么配置全局使用吧 增加环境变量，以mac为例，mac系统的环境变量文件有几个，我因为是全局公用的,所以我选择使用~/.bashrc文件 –打开cmd命令行,输入 1vim ~/.bashrc 进入编辑模式,增加1export PATH=$PATH:刚才下载的七牛命令行工具的位置 如果文件中以前有path环境变量,直接 :位置加后面就可以了保存然后执行1$ source ~/.bashrc 验证一下1$ qshell -v 如果成功会显示版本号 设置密钥,ak和sk登录七牛云个人中心-&gt;密钥管理中查看1$ qshell account ak sk 安装完成，开始使用上传图片有几种 上传100MB以下的小文件1$ qshell fput &lt;Bucket&gt; &lt;Key&gt; &lt;LocalFile&gt; [Overwrite] [MimeType] [UpHost] [FileType] 参数名称 描述 默认 Bucket 七牛空间名称 N Key 文件保存在七牛空间的名称 N LocalFile 本地文件的路径 N Overwrite 可选,是否覆盖空间已有文件，默认为false Y MimeType 可选,指定文件的MimeType Y UpHost 可选,上传入口地址 Y FileType 可选,文件存储类型，0(标准存储）1(低频存储) 0 如:上传后,在你的md文件中直接引入就OK了1![](http://p7vioebko.bkt.clouddn.com/a.jpg) 前面是七牛外联域名: 上传文件大小较大的文件 1$ qshell rput &lt;Bucket&gt; &lt;Key&gt; &lt;LocalFile&gt; [Overwrite] [MimeType] [UpHost] [FileType] 将本地目录中的文件同步到七牛空间 1$ qshell qupload [&lt;ThreadCount&gt;] &lt;LocalUploadConfig&gt; qupload需要本地配置文件的支持,详情请看:点击这里 从互联网上抓取一个资源并保存到七牛的空间中1$ qshell fetch &lt;RemoteResourceUrl&gt; &lt;Bucket&gt; [&lt;Key&gt;] 参数名 描述 可选参数 RemoteResourceUrl 互联网上资源的链接 Bucket 空间名称 N Key 该资源保存在空间中的名字，如果不指定这个名字，那么会使用抓取的资源的内容hash值来作为文件名 Y 适合大文件的:1$ qshell sync &lt;SrcResUrl&gt; &lt;Bucket&gt; &lt;Key&gt; [&lt;UpHostIp&gt;] 查询文件信息1$ qshell stat &lt;Bucket&gt; &lt;Key&gt; 参数名 描述 Bucket 空间名称 Key 空间中的文件名 删除文件1$ qshell delete &lt;Bucket&gt; &lt;Key&gt; 现在再上传图片就很简单了,再也不用本地找个地方保存图片，也不用每次都开web了：）想了解更多的，可以参考官方文档：官方文档]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo next主题第三方配置 评论 统计等]]></title>
    <url>%2Fnext%E4%B8%BB%E9%A2%98%E7%AC%AC%E4%B8%89%E6%96%B9%E9%85%8D%E7%BD%AE20180428%2F</url>
    <content type="text"><![CDATA[之前的文章讲了next的一般的配置，这次在说下next的第三方配置，比如评论、统计等 评论在多说和网易云跟帖相继倒闭，DISQUS、Facebook Comments、HyperComments不符合国情来必力打开超慢的情况下，选择了 Valine 这个评论系统是基于LeanCloud的，大家应该对这个很熟悉，对，Hexo的博客阅读量统计也是它。官网网址如下，需要注册一个账户。LeanCloud官网 注册后进入控制台后点击左下角创建应用： 应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的appid和appkey了： 为了数据安全，请注意设置自己的安全域名： 配置 主题配置文件修改appid和appkey 如果需要邮件提箱把notify设置为true具体的设置可以看评论系统中的邮件提醒设置 数据统计和分析常用的数据分析next主题都是支持的 百度统计登录 百度统计，定位到站点的代码获取页面 新建站点 百度提供的统计代码:复制 hm.js? 后面那串统计脚本 id，如下图所示： 编辑 主题配置文件， 修改字段 baidu_analytics，值设置成你的百度统计脚本 id。 CNZZ 统计在 主题配置文件 中增加了一项 cnzz_siteid的配置项，值为 CNZZ 里面添加统计的站点ID。 内容分享百度分享编辑 主题配置文件，添加/修改字段 baidushare，值为 true。 站内搜索安装 hexo-generator-searchdb，在站点的根目录下执行以下命令 1$ npm install hexo-generator-searchdb --save]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+github搭建个人博客之：next主题配置文件详细说明]]></title>
    <url>%2Fnext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE20180427%2F</url>
    <content type="text"><![CDATA[按照上面两篇的文章，一个简单的博客已经搭建好了。下面介绍下主题的配置在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置，为 站点配置文件；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项，为 主题配置文件 hexo下有很多的主题，具体可以看hexo主题,选择自己喜欢的本文是获赞最多的next主题的配置文件说明 安装next主题在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next 启用主题与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。1theme: next 主题设置完毕 需要修改 站点配置文件 的地方1language: zh-Hans # 语言中文 设置主题下外观目前 NexT 支持三种 Scheme，他们是： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白Mist - Muse 的紧凑版本，整洁有序的单栏外观Pisces - 双栏 Scheme，小家碧玉似的清新Scheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。123#scheme: Muse#scheme: Mistscheme: Pisces 设置菜单1234567menu: home: / archives: /archives #about: /about #categories: /categories tags: /tags #commonweal: /404.html 若你的站点运行在子目录中，请将链接前缀的 / 去掉前面的只是键值，对应的文字在languages/{language}.yml下 配置菜单前的小图标，menu_icons下面，键值与menu中的配置一致，大小写要严格匹配 设置侧栏位置设置侧栏的位置，修改 sidebar.position 的值，目前仅 Pisces Scheme 支持 position 配置12sidebar: position: left 设置侧栏显示的时机，修改 sidebar.display 的值 post - 默认行为，在文章页面（拥有目录列表）时显示always - 在所有页面中都显示hide - 在所有页面中都隐藏（可以手动展开）remove - 完全移除 设置 头像修改字段 avatar， 值设置成头像的链接地址 放置在 source/images/ 目录下 , 配置为：avatar: /images/avatar.png或者是完整的互联网 URI : avatar: http://example.com/avatar.png 设置 代码高亮主题NexT共有5款代码高亮主题。默认使用的是 白色的 normal 主题。可选的值有 normal，night， night blue， night bright， night eighties：更改 highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如：1234# Code Highlight theme# Available value: normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: normal 开启侧边栏社交链接12345678# Social linkssocial: GitHub: https://github.com/your-user-name Twitter: https://twitter.com/your-user-name 微博: http://weibo.com/your-user-name 豆瓣: http://douban.com/people/your-user-name 知乎: http://www.zhihu.com/people/your-user-name # 等等 开启打赏功能123reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！wechatpay: /path/to/wechat-reward-imagealipay: /path/to/alipay-reward-image 开启友情链接123links: MacTalk: http://macshuo.com/ Title: http://example.com/ 订阅微信公众号在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。在微信公众号平台下载您的二维码，并将它存放于博客source/uploads/目录下。然后编辑 主题配置文件，如下：1234wechat_subscriber: enabled: true qcode: /uploads/wechat-qcode.jpg description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！ 设置背景动画NexT 自带两种背景动画效果编辑 主题配置文件， 搜索 canvas_nest 或 three_waves，根据您的需求设置值为 true 或者 false 即可：1234567# canvas_nestcanvas_nest: true //开启动画canvas_nest: false //关闭动画# three_wavesthree_waves: true //开启动画three_waves: false //关闭动画 设置 阅读全文在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法： 在文章中使用 手动进行截断，Hexo 提供的方式 推荐 在文章的 front-matter 中添加 description，并提供文章摘录 自动形成摘要，在 主题配置文件 中添加：123auto_excerpt: enable: true length: 150 更改内容区域的宽度NexT 对于内容的宽度的设定如下： 700px，当屏幕宽度 &lt; 1600px 900px，当屏幕宽度 &gt;= 1600px 移动设备下，宽度自适应12345// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px 方法不适用于 Pisces Scheme，Pisces Scheme 的宽度修改如下:在 source/css/_schemes/Picses/_layout.styl 中，同时修改 header 的宽度、.main-inner 的宽度以及 .content-wrap 的宽度123header&#123; width: 90%; &#125;.container .main-inner &#123; width: 90%; &#125;.content-wrap &#123; width: calc(100% - 260px); &#125; 添加 标签 页面新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 底下代码是一篇包含标签的文章的例子：12345title: 标签测试文章tags: - Testing - Another Tag--- 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ： 12$ cd your-hexo-site$ hexo new page tags 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下： 1234title: 标签date: 2014-12-22 12:39:04type: &quot;tags&quot;--- 在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags 添加「分类」页面与设置标签页面相同 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ： 12$ cd your-hexo-site$ hexo new page categories 编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下： 1234title: 分类date: 2014-12-22 12:39:04type: &quot;categories&quot;--- 在菜单中添加链接。编辑 主题配置文件 ， 添加 categories 到 menu 中，如下: 1234menu: home: / archives: /archives categories: /categories 腾讯公益404页面腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;回到我的主页&quot;&gt; &lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 修改文章内链接文本样式修改文件 themes\next\source\css\/_common\components\post\post.styl ，在末尾,@import前添加如下css样式：1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 修改文章底部的那个带#号的标签修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成1&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 在每篇文章末尾统一添加“本文结束”标记 在路径 \themes\next\layout\/_macro 中新建 passage-end-tag.swig 文件,并添加以下内容： 123456789&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt; -------------本文结束 &lt;i class=&quot;fa fa-heartbeat&quot;&gt;&lt;/i&gt; 感谢您的阅读------------- &lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 接着打开\themes\next\layout\/_macro\post.swig文件，在post-body 之后， post-footer之前添加如下代码： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 然后打开主题配置文件 ,在末尾添加： 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 网站底部字数统计和时间统计 文字时间统计切换到根目录下，然后运行如下代码 1$ npm install hexo-wordcount --save 然后在/themes/next/layout/_partials/footer.swig文件尾部加上： 1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 时间统计在主题的配置文件中，配置如下： 123456# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount:item_text: truewordcount: truemin2read: true 在文章底部增加版权信息在目录next/layout/_macro/下添加my-copyright.swig：1234567891011121314151617181920212223242526272829303132&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type="text/javascript" src="http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"&gt;&lt;/script&gt; &lt;script src="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" type="text/css" href="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;"&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href="/" title="访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;转载请保留原文链接及作者。&lt;/p&gt;&lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); clipboard.on('success', $(function()&#123; $(".fa-clipboard").click(function()&#123; swal(&#123; title: "", text: '复制成功', html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;));&lt;/script&gt;&#123;% endif %&#125; 在目录next/source/css/_common/components/post/下添加my-post-copyright.styl：123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改next/layout/_macro/post.swig，在代码12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include &apos;wechat-subscriber.swig&apos; %&#125; &lt;/div&gt;&#123;% endif %&#125; 之前添加增加如下代码：12345&#123;% if not is_index %&#125; &lt;div&gt; &#123;% include &apos;my-copyright.swig&apos; %&#125; &lt;/div&gt;&#123;% endif %&#125; 修改next/source/css/_common/components/post/post.styl文件，在最后一行增加代码：1@import &quot;my-post-copyright&quot; 保存重新生成即可。如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似：1234567---title:date:tags:categories:copyright: true--- 以上是一些常用的配置 另外next主题的菜单图标显示无效的问题：修改themes/next/layout/_partials 下的 header.swig文件，找到以下代码1&lt;i class=&quot;menu-item-icon fa fa-fw fa-&#123;&#123; path.split(&apos;||&apos;)[1] | trim | default(&apos;question-circle&apos;) &#125;&#125;&quot;&gt;&lt;/i&gt; 改为1&lt;i class=&quot;menu-item-icon fa fa-fw fa-&#123;&#123; theme.menu_icons[name] | default(&apos;question-circle&apos;) &#125;&#125;&quot;&gt;&lt;/i&gt; ##本文参考API next]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+github搭建个人博客之：站点配置文件详细说明]]></title>
    <url>%2Fhexo%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE20180426%2F</url>
    <content type="text"><![CDATA[站点配置可以在 _config.yml 中修改大部份的配置。 网站1234567参数 描述title 网站标题subtitle 网站副标题description 网站描述author 您的名字language 网站使用的语言timezone 网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。 其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。 网址12345参数 描述 默认值url 网址root 网站根目录permalink 文章的永久链接格式 :year/:month/:day/:title/permalink_defaults 永久链接中各部分的默认值 目录123456789参数 描述source_dir 资源文件夹，这个文件夹用来存放内容。public_dir 公共文件夹，这个文件夹用于存放生成的站点文件。tag_dir 标签文件夹archive_dir 归档文件夹category_dir 分类文件夹code_dir Include code 文件夹i18n_dir 国际化（i18n）文件夹skip_render 跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。 文章123456789101112参数 描述new_post_name 新文章的文件名称default_layout 预设布局auto_spacing 在中文和英文之间加入空格titlecase 把标题转换为 title caseexternal_link 在新标签中打开链接filename_case 把文件名称转换为 (1) 小写或 (2) 大写render_drafts 显示草稿post_asset_folder 启动 Asset 文件夹relative_link 把链接改为与根目录的相对位址future 显示未来的文章highlight 代码块的设置 分类&amp;标签1234参数 描述 默认值default_category 默认分类 uncategorizedcategory_map 分类别名tag_map 标签别名 时间/日期格式123参数 描述 默认值date_format 日期格式 YYYY-MM-DDtime_format 时间格式 H:mm:ss 分页123参数 描述 默认值per_page 每页显示的文章量 (0 = 关闭分页功能) 10pagination_dir 分页目录 page 扩展123参数 描述theme 当前主题名称。值为false时禁用主题deploy 部署部分的设置 ##完整的站点配置:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485# Sitetitle: 云的妍色 #网站标题subtitle: 一字一符一世界 #网站副标题description: 码农的日常 #网站描述keywords:author: zhuyt #博主的名字language: zh-Hans #网站使用的语言timezone: #网站时区。Hexo 默认使用您电脑的时区# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://laayoune.github.io #http://yoursite.comroot: /permalink: :title:year:month:day/ #生成文件名字的格式 :year/:month/:day/:title/permalink_defaults:# Directory 目录配置source_dir: source #源文件夹，这个文件夹用来存放内容。public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件。tag_dir: tags #标签文件夹archive_dir: archives #归档文件夹category_dir: categories #分类文件夹code_dir: downloads/code #nclude code 文件夹i18n_dir: :lang #国际化（i18n）文件夹skip_render: #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。# Writing 文章new_post_name: :title.md # 新建文章默认文件名default_layout: post # 默认布局titlecase: false # Transform title into titlecaseexternal_link: true # 在新标签中打开一个外部链接，默认为truefilename_case: 0 #转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名render_drafts: false #是否渲染_drafts目录下的文章，默认为falsepost_asset_folder: false #启动 Asset 文件夹relative_link: false #把链接改为与根目录的相对位址，默认falsefuture: true #显示未来的文章，默认falsehighlight: #代码块的设置 enable: true line_number: true auto_detect: false tab_replace:# Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: &apos;&apos; per_page: 10 order_by: -date# Category &amp; Tag 分类和标签的设置default_category: uncategorized #默认分类category_map: #分类别名tag_map: #标签别名# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination 分页## Set per_page to 0 to disable paginationper_page: 10 #每页显示的文章量 (0 = 关闭分页功能)pagination_dir: page #分页目录# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next ## hexo主题## Rssfeed: type: atom #feed 类型 (atom/rss2) path: atom.xml #rss 路径 limit: 20 #在 rss 中最多生成的文章数(0显示所有)# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: git@github.com:laayoune/laayoune.github.io.git branch: master]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo+github搭建个人博客]]></title>
    <url>%2F%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A220180426%2F</url>
    <content type="text"><![CDATA[1. 安装git和nodeJs在搭建Hexo之前需要先安装git和nodeJs，直接去官方下载最新版本按照提示安装就好，就不再重复叙述了 2. 正式开始,安装Hexo执行以下命令1$ sudo npm install -g hexo 3. 创建博客安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。123$ hexo init &lt;目录&gt;$ cd &lt;目录&gt;$ npm install 新建完成后，指定文件夹的目录如下 .├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 4. 运行执行下面的命令进行文件生成1$ hexo g 运行1$ hexo s 浏览器输入http://localhost:4000 到此，hexo博客算是搭建成功了，但是只能在本地看，下一步，我们把它部署到github上 5. 部署到github上 首先我们需要先去github上注册个账号 登陆后新建一个仓库,仓库名称为: 你的帐号.github.io 获得新建仓库的下载地址：SSH或者HTTPS的 修改hexo的配置文件，在站点目录下的_config.yml文件 修改文件里面的deploy。其中的repository就改成你刚刚复制的地址。保存这个文件1234deploy: type: git repository: git@github.com:laayoune/laayoune.github.io.git branch: master 执行命令1$ hexo d 如果报错说没有git那么安装插件1$ npm install hexo-deployer-git --save 后再执行hexo d命令 输入github博客地址:你的帐号.github.io，就可以看到一个简单的博客搭建成功了 注意:如果使用的是SSH提交方式,第一次需要配置git密钥,否则会报错没有权限 查看是否有密钥123$ cd ~/.ssh$ lsauthorized_keys2 id_dsa known_hosts config id_dsa.pub 看一下有没有id_rsa和id_rsa.pub(或者是id_dsa和id_dsa.pub之类成对的文件)，有 .pub 后缀的文件就是公钥，另一个文件则是密钥 如果没有,生成密钥1$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; 执行后会提示输入密码(建议输一个，当然不输也行) 查看你生成的公钥 1$ cat ~/.ssh/id_rsa.pub 登陆你的github帐户。点击你的头像，然后 Settings -&gt; 左栏点击 SSH and GPG keys -&gt; 点击 New SSH key 然后你复制上面的公钥内容，粘贴进“Key”文本域内。 title域，自己随便起个名字就可以了]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
